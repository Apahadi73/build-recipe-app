{"version":3,"sources":["apiKeys.js","components/SearchForm.js","components/Recipe.js","pages/Body.js","App.js","index.js"],"names":["apikeys","SearchForm","setInput","useState","searchInput","setSearchInput","onButtonClicked","event","className","onSubmit","preventDefault","style","width","margin","onKeyDown","input","target","value","key","type","placeholder","onClick","Recipe","title","calories","image","ingredients","src","alt","Math","round","undefined","map","ingredient","uuidv4","text","onRenderIngredientList","Body","recipeList","length","Object","values","recipe","uri","label","onRenderList","App","_","recipesList","setRecipiesList","recipeUrl","useEffect","fetchRecipies","a","fetch","response","json","data","hits","ReactDOM","render","document","querySelector"],"mappings":"6SAAaA,EAAU,mCC4CRC,GD1CK,yDADC,WACD,oBAAsED,EAAtE,qD,MCCD,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SAAe,EACIC,qBADJ,mBAC5BC,EAD4B,KACfC,EADe,KAiB9BC,EAAkB,SAACC,GACxBL,EAASE,IAGV,OACC,yBAAKI,UAAU,QACd,0BAAMA,UAAU,cAAcC,SAVR,SAACF,GACxBA,EAAMG,mBAUJ,yBAAKF,UAAU,kBAAkBG,MAAO,CAAEC,MAAO,SAAUC,OAAQ,SAClE,2BACCC,UAtBiB,SAACP,GACtB,IAAMQ,EAAQR,EAAMS,OAAOC,MAC3BZ,EAAeU,GACG,UAAdR,EAAMW,KACThB,EAASE,IAmBNI,UAAU,aACVG,MAAO,CAAEC,MAAO,OAChBO,KAAK,OACLC,YAAY,kCAEb,4BAAQZ,UAAU,wBAAwBa,QAASf,GAClD,uBAAGE,UAAU,uBAAuBa,QAASf,U,QCfpCgB,G,MAjBA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAOzC,OACC,yBAAKlB,UAAU,UACd,4BAAKe,GACL,yBAAKf,UAAU,UAAUmB,IAAKF,EAAOG,IAAKL,IAC1C,8CAAoBM,KAAKC,MAAMN,IAVF,WAE9B,QAAoBO,IAAhBL,EACH,OAAOA,EAAYM,KAAI,SAACC,GAAD,OAAgB,wBAAIf,IAAKgB,eAAWD,EAAWE,SAQrEC,MCUWC,G,MArBF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAkBf,OAAO,yBAAK9B,UAAU,oBAjBD,SAAC8B,GACrB,OAAkB,MAAdA,GAA2C,MAArBA,EAAWC,OAClBC,OAAOC,OAAOH,GAEbN,KAAI,SAACU,GAAD,OACtB,kBAAC,EAAD,CACCxB,IAAKwB,EAAOA,OAAOC,IACnBpB,MAAOmB,EAAOA,OAAOE,MACrBpB,SAAUkB,EAAOA,OAAOlB,SACxBC,MAAOiB,EAAOA,OAAOjB,MACrBC,YAAagB,EAAOA,OAAOhB,iBAIvB,kEAGkCmB,CAAaP,MCezCQ,G,MA/BH,SAACC,GAAO,IAAD,EACsB5C,mBAAS,SAD/B,mBACVC,EADU,KACGC,EADH,OAEuBF,mBAAS,IAFhC,mBAEV6C,EAFU,KAEGC,EAFH,KAIZC,EAAS,0CAAsC9C,EAAtC,mBJVK,WIUL,oBAA6EJ,GAG5FmD,qBACC,WACCC,MAED,CAAEhD,IAIH,IAAMgD,EAAa,uCAAG,8BAAAC,EAAA,sEACEC,MAAMJ,GADR,cACfK,EADe,gBAEFA,EAASC,OAFP,OAEfC,EAFe,OAGrBR,EAAgBQ,EAAKC,MAHA,2CAAH,qDAMnB,OACC,yBAAKlD,UAAU,QACd,yBAAKA,UAAU,aACd,kBAAC,EAAD,CAAYN,SAAUG,IACtB,kBAAC,EAAD,CAAMiC,WAAYU,QC5BtBW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.c0f35763.chunk.js","sourcesContent":["export const apikeys = 'f1def411f9bfb5f9bf2b3577f1fea074'; //my food api key\nexport const appId = '9eba37b0'; //my application id\nexport const baseUrl = `https://api.edamam.com/search?q=chicken&app_id=${appId}&app_key=${apikeys}&from=0&to=3&calories=591-722&health=alcohol-free`;\n","import React, { useState } from 'react';\nimport './SearchForm.css';\n\nconst SearchForm = ({ setInput }) => {\n\tconst [ searchInput, setSearchInput ] = useState(); //used so that we can use props callback in onButtonclicked\n\n\t//registers every keystroke\n\tconst onInputChange = (event) => {\n\t\tconst input = event.target.value;\n\t\tsetSearchInput(input);\n\t\tif (event.key === 'Enter') {\n\t\t\tsetInput(searchInput); //when the user presses enter, this sets searchInput\n\t\t}\n\t};\n\n\t//when user submits the form\n\tconst onSubmitPressed = (event) => {\n\t\tevent.preventDefault(); //prevents page from reloading\n\t};\n\n\tconst onButtonClicked = (event) => {\n\t\tsetInput(searchInput); //when the user presses enter, this sets searchInput\n\t};\n\n\treturn (\n\t\t<div className=\"form\">\n\t\t\t<form className=\"search-form\" onSubmit={onSubmitPressed}>\n\t\t\t\t<div className=\"ui action input\" style={{ width: '43rem ', margin: '2rem' }}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tonKeyDown={onInputChange}\n\t\t\t\t\t\tclassName=\"search-bar\"\n\t\t\t\t\t\tstyle={{ width: '99%' }}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Enter the recipe name here...\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"ui orange icon button\" onClick={onButtonClicked}>\n\t\t\t\t\t\t<i className=\"ui white search icon\" onClick={onButtonClicked} />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default SearchForm;\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './Recipe.css';\n\nconst Recipe = ({ title, calories, image, ingredients }) => {\n\tconst onRenderIngredientList = () => {\n\t\t// var ingredientArray = Object.values(ingredients);\n\t\tif (ingredients !== undefined) {\n\t\t\treturn ingredients.map((ingredient) => <li key={uuidv4()}>{ingredient.text}</li>);\n\t\t}\n\t};\n\treturn (\n\t\t<div className=\"recipe\">\n\t\t\t<h3>{title}</h3>\n\t\t\t<img className=\"picture\" src={image} alt={title} />\n\t\t\t<p>Total Calories: {Math.round(calories)}</p>\n\t\t\t{onRenderIngredientList()}\n\t\t</div>\n\t);\n};\n\nexport default Recipe;\n","import React from 'react';\nimport Recipe from '../components/Recipe';\n\nimport './Body.css';\n\nconst Body = ({ recipeList }) => {\n\tconst onRenderList = (recipeList) => {\n\t\tif (recipeList != null && recipeList.length != null) {\n\t\t\tvar recipeArray = Object.values(recipeList);\n\t\t\t//maps element of recipe array to Recipe components\n\t\t\treturn recipeArray.map((recipe) => (\n\t\t\t\t<Recipe\n\t\t\t\t\tkey={recipe.recipe.uri}\n\t\t\t\t\ttitle={recipe.recipe.label}\n\t\t\t\t\tcalories={recipe.recipe.calories}\n\t\t\t\t\timage={recipe.recipe.image}\n\t\t\t\t\tingredients={recipe.recipe.ingredients}\n\t\t\t\t/>\n\t\t\t));\n\t\t}\n\t\treturn <div>Enter the recipe to start with...</div>;\n\t};\n\n\treturn <div className=\"recipe-container\">{onRenderList(recipeList)}</div>;\n};\n\nexport default Body;\n","import React, { useState, useEffect } from 'react';\nimport { apikeys, appId } from './apiKeys';\n\nimport SearchForm from './components/SearchForm';\nimport Body from './pages/Body';\nimport './App.css';\n\nconst App = (_) => {\n\tconst [ searchInput, setSearchInput ] = useState('Salad');\n\tconst [ recipesList, setRecipiesList ] = useState([]);\n\n\tconst recipeUrl = `https://api.edamam.com/search?q=${searchInput}&app_id=${appId}&app_key=${apikeys}`;\n\n\t//runs every time searchInput state changes\n\tuseEffect(\n\t\t() => {\n\t\t\tfetchRecipies();\n\t\t},\n\t\t[ searchInput ]\n\t);\n\n\t//fetches recipies from the api and stores it in the recipes list\n\tconst fetchRecipies = async () => {\n\t\tconst response = await fetch(recipeUrl);\n\t\tconst data = await response.json();\n\t\tsetRecipiesList(data.hits);\n\t};\n\n\treturn (\n\t\t<div className=\" App\">\n\t\t\t<div className=\"Container\">\n\t\t\t\t<SearchForm setInput={setSearchInput} />\n\t\t\t\t<Body recipeList={recipesList} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}